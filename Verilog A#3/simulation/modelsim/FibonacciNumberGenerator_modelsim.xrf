vendor_name = ModelSim
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/adder.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/counter.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/MUX.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/Reg.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/FibonacciAdder.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/datapth.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/ControlUnit.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/TestBench.v
source_file = 1, D:/uni/EE/EE 460/assgiments/Verilog A#3/db/FibonacciNumberGenerator.cbx.xml
design_name = FibonacciAdder
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, FibonacciAdder, 1
instance = comp, \done~output , done~output, FibonacciAdder, 1
instance = comp, \dataOut[0]~output , dataOut[0]~output, FibonacciAdder, 1
instance = comp, \dataOut[1]~output , dataOut[1]~output, FibonacciAdder, 1
instance = comp, \dataOut[2]~output , dataOut[2]~output, FibonacciAdder, 1
instance = comp, \dataOut[3]~output , dataOut[3]~output, FibonacciAdder, 1
instance = comp, \dataOut[4]~output , dataOut[4]~output, FibonacciAdder, 1
instance = comp, \dataOut[5]~output , dataOut[5]~output, FibonacciAdder, 1
instance = comp, \dataOut[6]~output , dataOut[6]~output, FibonacciAdder, 1
instance = comp, \dataOut[7]~output , dataOut[7]~output, FibonacciAdder, 1
instance = comp, \dataOut[8]~output , dataOut[8]~output, FibonacciAdder, 1
instance = comp, \dataOut[9]~output , dataOut[9]~output, FibonacciAdder, 1
instance = comp, \dataOut[10]~output , dataOut[10]~output, FibonacciAdder, 1
instance = comp, \dataOut[11]~output , dataOut[11]~output, FibonacciAdder, 1
instance = comp, \dataOut[12]~output , dataOut[12]~output, FibonacciAdder, 1
instance = comp, \dataOut[13]~output , dataOut[13]~output, FibonacciAdder, 1
instance = comp, \dataOut[14]~output , dataOut[14]~output, FibonacciAdder, 1
instance = comp, \dataOut[15]~output , dataOut[15]~output, FibonacciAdder, 1
instance = comp, \dataOut[16]~output , dataOut[16]~output, FibonacciAdder, 1
instance = comp, \clk~input , clk~input, FibonacciAdder, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, FibonacciAdder, 1
instance = comp, \numberIn[2]~input , numberIn[2]~input, FibonacciAdder, 1
instance = comp, \numberIn[3]~input , numberIn[3]~input, FibonacciAdder, 1
instance = comp, \numberIn[4]~input , numberIn[4]~input, FibonacciAdder, 1
instance = comp, \reset~input , reset~input, FibonacciAdder, 1
instance = comp, \dp|count|Add0~0 , dp|count|Add0~0, FibonacciAdder, 1
instance = comp, \dp|count|Add0~12 , dp|count|Add0~12, FibonacciAdder, 1
instance = comp, \dp|count|cn[0] , dp|count|cn[0], FibonacciAdder, 1
instance = comp, \dp|count|Add0~2 , dp|count|Add0~2, FibonacciAdder, 1
instance = comp, \dp|count|Add0~13 , dp|count|Add0~13, FibonacciAdder, 1
instance = comp, \dp|count|cn[1] , dp|count|cn[1], FibonacciAdder, 1
instance = comp, \dp|count|Add0~4 , dp|count|Add0~4, FibonacciAdder, 1
instance = comp, \dp|count|Add0~14 , dp|count|Add0~14, FibonacciAdder, 1
instance = comp, \dp|count|cn[2] , dp|count|cn[2], FibonacciAdder, 1
instance = comp, \dp|count|Add0~6 , dp|count|Add0~6, FibonacciAdder, 1
instance = comp, \dp|count|Add0~8 , dp|count|Add0~8, FibonacciAdder, 1
instance = comp, \dp|count|cn[3] , dp|count|cn[3], FibonacciAdder, 1
instance = comp, \dp|count|Add0~9 , dp|count|Add0~9, FibonacciAdder, 1
instance = comp, \dp|count|Add0~11 , dp|count|Add0~11, FibonacciAdder, 1
instance = comp, \dp|count|cn[4] , dp|count|cn[4], FibonacciAdder, 1
instance = comp, \dp|count|LessThan0~1 , dp|count|LessThan0~1, FibonacciAdder, 1
instance = comp, \numberIn[1]~input , numberIn[1]~input, FibonacciAdder, 1
instance = comp, \numberIn[0]~input , numberIn[0]~input, FibonacciAdder, 1
instance = comp, \dp|count|LessThan0~2 , dp|count|LessThan0~2, FibonacciAdder, 1
instance = comp, \dp|count|LessThan0~3 , dp|count|LessThan0~3, FibonacciAdder, 1
instance = comp, \dp|count|LessThan0~0 , dp|count|LessThan0~0, FibonacciAdder, 1
instance = comp, \go~input , go~input, FibonacciAdder, 1
instance = comp, \CU|Selector1~0 , CU|Selector1~0, FibonacciAdder, 1
instance = comp, \CU|Selector1~1 , CU|Selector1~1, FibonacciAdder, 1
instance = comp, \CU|state.S1 , CU|state.S1, FibonacciAdder, 1
instance = comp, \CU|state~7 , CU|state~7, FibonacciAdder, 1
instance = comp, \CU|state.S2 , CU|state.S2, FibonacciAdder, 1
instance = comp, \CU|state~5 , CU|state~5, FibonacciAdder, 1
instance = comp, \CU|state~6 , CU|state~6, FibonacciAdder, 1
instance = comp, \CU|state.S0 , CU|state.S0, FibonacciAdder, 1
instance = comp, \CU|Selector5~0 , CU|Selector5~0, FibonacciAdder, 1
instance = comp, \CU|Selector5~0clkctrl , CU|Selector5~0clkctrl, FibonacciAdder, 1
instance = comp, \CU|selB , CU|selB, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[0]~0 , dp|muxA|muxOut[0]~0, FibonacciAdder, 1
instance = comp, \reset~inputclkctrl , reset~inputclkctrl, FibonacciAdder, 1
instance = comp, \CU|enB , CU|enB, FibonacciAdder, 1
instance = comp, \dp|regA|data[0] , dp|regA|data[0], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[0]~0 , dp|muxB|muxOut[0]~0, FibonacciAdder, 1
instance = comp, \dp|regB|data[0] , dp|regB|data[0], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[0]~0 , dp|Add_AB|addOut[0]~0, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[1]~1 , dp|muxA|muxOut[1]~1, FibonacciAdder, 1
instance = comp, \dp|regA|data[1] , dp|regA|data[1], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[1]~1 , dp|muxB|muxOut[1]~1, FibonacciAdder, 1
instance = comp, \dp|regB|data[1] , dp|regB|data[1], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[1]~2 , dp|Add_AB|addOut[1]~2, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[2]~2 , dp|muxA|muxOut[2]~2, FibonacciAdder, 1
instance = comp, \dp|regA|data[2] , dp|regA|data[2], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[2]~2 , dp|muxB|muxOut[2]~2, FibonacciAdder, 1
instance = comp, \dp|regB|data[2] , dp|regB|data[2], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[2]~4 , dp|Add_AB|addOut[2]~4, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[3]~3 , dp|muxA|muxOut[3]~3, FibonacciAdder, 1
instance = comp, \dp|regA|data[3] , dp|regA|data[3], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[3]~3 , dp|muxB|muxOut[3]~3, FibonacciAdder, 1
instance = comp, \dp|regB|data[3] , dp|regB|data[3], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[3]~6 , dp|Add_AB|addOut[3]~6, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[4]~4 , dp|muxA|muxOut[4]~4, FibonacciAdder, 1
instance = comp, \dp|regA|data[4] , dp|regA|data[4], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[4]~4 , dp|muxB|muxOut[4]~4, FibonacciAdder, 1
instance = comp, \dp|regB|data[4] , dp|regB|data[4], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[4]~8 , dp|Add_AB|addOut[4]~8, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[5]~5 , dp|muxA|muxOut[5]~5, FibonacciAdder, 1
instance = comp, \dp|regA|data[5] , dp|regA|data[5], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[5]~5 , dp|muxB|muxOut[5]~5, FibonacciAdder, 1
instance = comp, \dp|regB|data[5] , dp|regB|data[5], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[5]~10 , dp|Add_AB|addOut[5]~10, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[6]~6 , dp|muxA|muxOut[6]~6, FibonacciAdder, 1
instance = comp, \dp|regA|data[6] , dp|regA|data[6], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[6]~6 , dp|muxB|muxOut[6]~6, FibonacciAdder, 1
instance = comp, \dp|regB|data[6] , dp|regB|data[6], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[6]~12 , dp|Add_AB|addOut[6]~12, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[7]~7 , dp|muxA|muxOut[7]~7, FibonacciAdder, 1
instance = comp, \dp|regA|data[7] , dp|regA|data[7], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[7]~7 , dp|muxB|muxOut[7]~7, FibonacciAdder, 1
instance = comp, \dp|regB|data[7] , dp|regB|data[7], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[7]~14 , dp|Add_AB|addOut[7]~14, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[8]~8 , dp|muxA|muxOut[8]~8, FibonacciAdder, 1
instance = comp, \dp|regA|data[8] , dp|regA|data[8], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[8]~8 , dp|muxB|muxOut[8]~8, FibonacciAdder, 1
instance = comp, \dp|regB|data[8] , dp|regB|data[8], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[8]~16 , dp|Add_AB|addOut[8]~16, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[9]~9 , dp|muxA|muxOut[9]~9, FibonacciAdder, 1
instance = comp, \dp|regA|data[9] , dp|regA|data[9], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[9]~9 , dp|muxB|muxOut[9]~9, FibonacciAdder, 1
instance = comp, \dp|regB|data[9] , dp|regB|data[9], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[9]~18 , dp|Add_AB|addOut[9]~18, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[10]~10 , dp|muxA|muxOut[10]~10, FibonacciAdder, 1
instance = comp, \dp|regA|data[10] , dp|regA|data[10], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[10]~10 , dp|muxB|muxOut[10]~10, FibonacciAdder, 1
instance = comp, \dp|regB|data[10] , dp|regB|data[10], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[10]~20 , dp|Add_AB|addOut[10]~20, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[11]~11 , dp|muxA|muxOut[11]~11, FibonacciAdder, 1
instance = comp, \dp|regA|data[11] , dp|regA|data[11], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[11]~11 , dp|muxB|muxOut[11]~11, FibonacciAdder, 1
instance = comp, \dp|regB|data[11] , dp|regB|data[11], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[11]~22 , dp|Add_AB|addOut[11]~22, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[12]~12 , dp|muxA|muxOut[12]~12, FibonacciAdder, 1
instance = comp, \dp|regA|data[12] , dp|regA|data[12], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[12]~12 , dp|muxB|muxOut[12]~12, FibonacciAdder, 1
instance = comp, \dp|regB|data[12] , dp|regB|data[12], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[12]~24 , dp|Add_AB|addOut[12]~24, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[13]~13 , dp|muxA|muxOut[13]~13, FibonacciAdder, 1
instance = comp, \dp|regA|data[13] , dp|regA|data[13], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[13]~13 , dp|muxB|muxOut[13]~13, FibonacciAdder, 1
instance = comp, \dp|regB|data[13] , dp|regB|data[13], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[13]~26 , dp|Add_AB|addOut[13]~26, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[14]~14 , dp|muxA|muxOut[14]~14, FibonacciAdder, 1
instance = comp, \dp|regA|data[14] , dp|regA|data[14], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[14]~14 , dp|muxB|muxOut[14]~14, FibonacciAdder, 1
instance = comp, \dp|regB|data[14] , dp|regB|data[14], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[14]~28 , dp|Add_AB|addOut[14]~28, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[15]~15 , dp|muxA|muxOut[15]~15, FibonacciAdder, 1
instance = comp, \dp|regA|data[15] , dp|regA|data[15], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[15]~15 , dp|muxB|muxOut[15]~15, FibonacciAdder, 1
instance = comp, \dp|regB|data[15] , dp|regB|data[15], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[15]~30 , dp|Add_AB|addOut[15]~30, FibonacciAdder, 1
instance = comp, \dp|muxA|muxOut[16]~16 , dp|muxA|muxOut[16]~16, FibonacciAdder, 1
instance = comp, \dp|regA|data[16] , dp|regA|data[16], FibonacciAdder, 1
instance = comp, \dp|muxB|muxOut[16]~16 , dp|muxB|muxOut[16]~16, FibonacciAdder, 1
instance = comp, \dp|regB|data[16] , dp|regB|data[16], FibonacciAdder, 1
instance = comp, \dp|Add_AB|addOut[16]~32 , dp|Add_AB|addOut[16]~32, FibonacciAdder, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, FibonacciAdder, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, FibonacciAdder, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
