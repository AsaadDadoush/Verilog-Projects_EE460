|simple8BitProcessor
dataIn[0] => dataIn[0].IN1
dataIn[1] => dataIn[1].IN1
dataIn[2] => dataIn[2].IN1
dataIn[3] => dataIn[3].IN1
dataIn[4] => dataIn[4].IN1
dataIn[5] => dataIn[5].IN1
dataIn[6] => dataIn[6].IN1
dataIn[7] => dataIn[7].IN1
dataOut[0] << dataPath:DP.port3
dataOut[1] << dataPath:DP.port3
dataOut[2] << dataPath:DP.port3
dataOut[3] << dataPath:DP.port3
dataOut[4] << dataPath:DP.port3
dataOut[5] << dataPath:DP.port3
dataOut[6] << dataPath:DP.port3
dataOut[7] << dataPath:DP.port3
func[0] => Ry[0].IN1
func[1] => Ry[1].IN1
func[2] => Ry[2].IN1
func[3] => Rx[0].IN1
func[4] => Rx[1].IN1
func[5] => Rx[2].IN1
func[6] => opCode[0].IN1
func[7] => opCode[1].IN1
func[8] => opCode[2].IN1
clk => clk.IN1


|simple8BitProcessor|controlUnit:CU
opCode[0] => Decoder0.IN2
opCode[0] => aluSelction[0].DATAIN
opCode[1] => Decoder0.IN1
opCode[1] => Mux0.IN5
opCode[1] => Decoder1.IN1
opCode[1] => aluSelction[1].DATAIN
opCode[2] => Decoder0.IN0
opCode[2] => Mux0.IN4
opCode[2] => Decoder1.IN0
regWrite <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
aluSelction[0] <= opCode[0].DB_MAX_OUTPUT_PORT_TYPE
aluSelction[1] <= opCode[1].DB_MAX_OUTPUT_PORT_TYPE
aluSelction[2] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
destSrc[0] <= ctrlSignals.DB_MAX_OUTPUT_PORT_TYPE
destSrc[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE


|simple8BitProcessor|dataPath:DP
dataIn[0] => dataIn[0].IN1
dataIn[1] => dataIn[1].IN1
dataIn[2] => dataIn[2].IN1
dataIn[3] => dataIn[3].IN1
dataIn[4] => dataIn[4].IN1
dataIn[5] => dataIn[5].IN1
dataIn[6] => dataIn[6].IN1
dataIn[7] => dataIn[7].IN1
Rx[0] => Rx[0].IN2
Rx[1] => Rx[1].IN2
Rx[2] => Rx[2].IN2
Ry[0] => Ry[0].IN1
Ry[1] => Ry[1].IN1
Ry[2] => Ry[2].IN1
dataOut[0] <= dataW[0].DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= dataW[1].DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= dataW[2].DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= dataW[3].DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= dataW[4].DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= dataW[5].DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= dataW[6].DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= dataW[7].DB_MAX_OUTPUT_PORT_TYPE
AluSelction[0] => AluSelction[0].IN1
AluSelction[1] => AluSelction[1].IN1
AluSelction[2] => AluSelction[2].IN1
destSrc[0] => destSrc[0].IN1
destSrc[1] => destSrc[1].IN1
regWrite => regWrite.IN1
clk => clk.IN1


|simple8BitProcessor|dataPath:DP|regFile:RF
ra[0] => rf.RADDR
ra[1] => rf.RADDR1
ra[2] => rf.RADDR2
rb[0] => rf.PORTBRADDR
rb[1] => rf.PORTBRADDR1
rb[2] => rf.PORTBRADDR2
rw[0] => rf.waddr_a[0].DATAIN
rw[0] => rf.WADDR
rw[1] => rf.waddr_a[1].DATAIN
rw[1] => rf.WADDR1
rw[2] => rf.waddr_a[2].DATAIN
rw[2] => rf.WADDR2
RegWr => rf.we_a.DATAIN
RegWr => rf.WE
dataA[0] <= rf.DATAOUT
dataA[1] <= rf.DATAOUT1
dataA[2] <= rf.DATAOUT2
dataA[3] <= rf.DATAOUT3
dataA[4] <= rf.DATAOUT4
dataA[5] <= rf.DATAOUT5
dataA[6] <= rf.DATAOUT6
dataA[7] <= rf.DATAOUT7
dataB[0] <= rf.PORTBDATAOUT
dataB[1] <= rf.PORTBDATAOUT1
dataB[2] <= rf.PORTBDATAOUT2
dataB[3] <= rf.PORTBDATAOUT3
dataB[4] <= rf.PORTBDATAOUT4
dataB[5] <= rf.PORTBDATAOUT5
dataB[6] <= rf.PORTBDATAOUT6
dataB[7] <= rf.PORTBDATAOUT7
dataW[0] => rf.data_a[0].DATAIN
dataW[0] => rf.DATAIN
dataW[1] => rf.data_a[1].DATAIN
dataW[1] => rf.DATAIN1
dataW[2] => rf.data_a[2].DATAIN
dataW[2] => rf.DATAIN2
dataW[3] => rf.data_a[3].DATAIN
dataW[3] => rf.DATAIN3
dataW[4] => rf.data_a[4].DATAIN
dataW[4] => rf.DATAIN4
dataW[5] => rf.data_a[5].DATAIN
dataW[5] => rf.DATAIN5
dataW[6] => rf.data_a[6].DATAIN
dataW[6] => rf.DATAIN6
dataW[7] => rf.data_a[7].DATAIN
dataW[7] => rf.DATAIN7
clk => rf.we_a.CLK
clk => rf.waddr_a[2].CLK
clk => rf.waddr_a[1].CLK
clk => rf.waddr_a[0].CLK
clk => rf.data_a[7].CLK
clk => rf.data_a[6].CLK
clk => rf.data_a[5].CLK
clk => rf.data_a[4].CLK
clk => rf.data_a[3].CLK
clk => rf.data_a[2].CLK
clk => rf.data_a[1].CLK
clk => rf.data_a[0].CLK
clk => rf.CLK0


|simple8BitProcessor|dataPath:DP|ALU:AS
i0[0] => Add0.IN8
i0[0] => Add1.IN16
i0[0] => aluOut.IN0
i0[0] => aluOut.IN0
i0[0] => aluOut.IN0
i0[1] => Add0.IN7
i0[1] => Add1.IN15
i0[1] => aluOut.IN0
i0[1] => aluOut.IN0
i0[1] => aluOut.IN0
i0[2] => Add0.IN6
i0[2] => Add1.IN14
i0[2] => aluOut.IN0
i0[2] => aluOut.IN0
i0[2] => aluOut.IN0
i0[3] => Add0.IN5
i0[3] => Add1.IN13
i0[3] => aluOut.IN0
i0[3] => aluOut.IN0
i0[3] => aluOut.IN0
i0[4] => Add0.IN4
i0[4] => Add1.IN12
i0[4] => aluOut.IN0
i0[4] => aluOut.IN0
i0[4] => aluOut.IN0
i0[5] => Add0.IN3
i0[5] => Add1.IN11
i0[5] => aluOut.IN0
i0[5] => aluOut.IN0
i0[5] => aluOut.IN0
i0[6] => Add0.IN2
i0[6] => Add1.IN10
i0[6] => aluOut.IN0
i0[6] => aluOut.IN0
i0[6] => aluOut.IN0
i0[7] => Add0.IN1
i0[7] => Add1.IN9
i0[7] => aluOut.IN0
i0[7] => aluOut.IN0
i0[7] => aluOut.IN0
i1[0] => Add0.IN16
i1[0] => aluOut.IN1
i1[0] => aluOut.IN1
i1[0] => aluOut.IN1
i1[0] => Add1.IN8
i1[1] => Add0.IN15
i1[1] => aluOut.IN1
i1[1] => aluOut.IN1
i1[1] => aluOut.IN1
i1[1] => Add1.IN7
i1[2] => Add0.IN14
i1[2] => aluOut.IN1
i1[2] => aluOut.IN1
i1[2] => aluOut.IN1
i1[2] => Add1.IN6
i1[3] => Add0.IN13
i1[3] => aluOut.IN1
i1[3] => aluOut.IN1
i1[3] => aluOut.IN1
i1[3] => Add1.IN5
i1[4] => Add0.IN12
i1[4] => aluOut.IN1
i1[4] => aluOut.IN1
i1[4] => aluOut.IN1
i1[4] => Add1.IN4
i1[5] => Add0.IN11
i1[5] => aluOut.IN1
i1[5] => aluOut.IN1
i1[5] => aluOut.IN1
i1[5] => Add1.IN3
i1[6] => Add0.IN10
i1[6] => aluOut.IN1
i1[6] => aluOut.IN1
i1[6] => aluOut.IN1
i1[6] => Add1.IN2
i1[7] => Add0.IN9
i1[7] => aluOut.IN1
i1[7] => aluOut.IN1
i1[7] => aluOut.IN1
i1[7] => Add1.IN1
sel[0] => Mux0.IN10
sel[0] => Mux1.IN10
sel[0] => Mux2.IN10
sel[0] => Mux3.IN10
sel[0] => Mux4.IN10
sel[0] => Mux5.IN10
sel[0] => Mux6.IN10
sel[0] => Mux7.IN10
sel[1] => Mux0.IN9
sel[1] => Mux1.IN9
sel[1] => Mux2.IN9
sel[1] => Mux3.IN9
sel[1] => Mux4.IN9
sel[1] => Mux5.IN9
sel[1] => Mux6.IN9
sel[1] => Mux7.IN9
sel[2] => Mux0.IN8
sel[2] => Mux1.IN8
sel[2] => Mux2.IN8
sel[2] => Mux3.IN8
sel[2] => Mux4.IN8
sel[2] => Mux5.IN8
sel[2] => Mux6.IN8
sel[2] => Mux7.IN8
aluOut[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
aluOut[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
aluOut[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
aluOut[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
aluOut[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
aluOut[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
aluOut[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
aluOut[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|simple8BitProcessor|dataPath:DP|MUX3:mux
dataIn[0] => Mux7.IN0
dataIn[1] => Mux6.IN0
dataIn[2] => Mux5.IN0
dataIn[3] => Mux4.IN0
dataIn[4] => Mux3.IN0
dataIn[5] => Mux2.IN0
dataIn[6] => Mux1.IN0
dataIn[7] => Mux0.IN0
dataA[0] => Mux7.IN1
dataA[1] => Mux6.IN1
dataA[2] => Mux5.IN1
dataA[3] => Mux4.IN1
dataA[4] => Mux3.IN1
dataA[5] => Mux2.IN1
dataA[6] => Mux1.IN1
dataA[7] => Mux0.IN1
dataB[0] => Mux7.IN2
dataB[1] => Mux6.IN2
dataB[2] => Mux5.IN2
dataB[3] => Mux4.IN2
dataB[4] => Mux3.IN2
dataB[5] => Mux2.IN2
dataB[6] => Mux1.IN2
dataB[7] => Mux0.IN2
aluResults[0] => Mux7.IN3
aluResults[1] => Mux6.IN3
aluResults[2] => Mux5.IN3
aluResults[3] => Mux4.IN3
aluResults[4] => Mux3.IN3
aluResults[5] => Mux2.IN3
aluResults[6] => Mux1.IN3
aluResults[7] => Mux0.IN3
muxOut[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
muxOut[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
muxOut[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
muxOut[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
muxOut[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
muxOut[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
muxOut[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
muxOut[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ctr[0] => Mux0.IN5
ctr[0] => Mux1.IN5
ctr[0] => Mux2.IN5
ctr[0] => Mux3.IN5
ctr[0] => Mux4.IN5
ctr[0] => Mux5.IN5
ctr[0] => Mux6.IN5
ctr[0] => Mux7.IN5
ctr[1] => Mux0.IN4
ctr[1] => Mux1.IN4
ctr[1] => Mux2.IN4
ctr[1] => Mux3.IN4
ctr[1] => Mux4.IN4
ctr[1] => Mux5.IN4
ctr[1] => Mux6.IN4
ctr[1] => Mux7.IN4


